name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ "main" ] # Or your default branch
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  PYTHON_VERSION: '3.9' # set this to your Python version
  OUTPUT_DIR: '_site'   # The directory where your Python script outputs static files

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run coach.py to build static site
        run: |
          python coach.py # This script should generate files into ${{ env.OUTPUT_DIR }}
          # Example: if coach.py creates files in a folder named "generated_site"
          # then you would use:
          # python coach.py
          # mkdir -p ${{ env.OUTPUT_DIR }}
          # cp -r generated_site/* ${{ env.OUTPUT_DIR }}/

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload contents of the output directory
          path: ./${{ env.OUTPUT_DIR }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
